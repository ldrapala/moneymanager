package byt.money.moneymanager.gui.workingpanel;

import byt.money.moneymanager.model.Event;
import byt.money.moneymanager.model.EventModel;
import byt.money.moneymanager.presenter.workingpanel.AddingPanelPresenter;
import byt.money.moneymanager.validator.UserInputHandler;
import byt.money.moneymanager.validator.AmountValidator;
import byt.money.moneymanager.validator.ComponentValidator;
import byt.money.moneymanager.validator.TextValidator;
import byt.money.moneymanager.validator.Validator;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Lukasz
 */
public class AddingPanel extends javax.swing.JPanel {

    private static final String EMPTY = "";
    
    private AddingPanelPresenter addingWorkingPresenter;
    private Map<String, Event> localizeCB;

    /**
     * Creates new form AddingPanel
     */
    public AddingPanel() {
        initComponents();
        createValidators();
        localize();
    }

    public final void localize() {
        ResourceBundle I18N = ResourceBundle.getBundle("i18n/i18n");
        categoryLabel.setText(I18N.getString("AddingPanel.categoryLabel"));
        ammountLabel.setText(I18N.getString("AddingPanel.ammountLabel"));
        nameLabel.setText(I18N.getString("AddingPanel.nameLabel"));
        detailsLabel.setText(I18N.getString("AddingPanel.detailsLabel"));
        dateLabel.setText(I18N.getString("AddingPanel.dateLabel"));
        acceptButton.setText(I18N.getString("AddingPanel.acceptButton"));
        prepareCategoryField(I18N);
    }
    
    public final void update(EventModel model){
        ResourceBundle I18N = ResourceBundle.getBundle("i18n/i18n");
        Event event = (Event) model.getValue(EventModel.Key.EVENT);
        String eventString = I18N.getString(event.toString());
        categoryField.setSelectedItem(eventString);
        BigDecimal amount = (BigDecimal) model.getValue(EventModel.Key.AMOUNT);
        amountField.setText(amount.toString());
        Object name = model.getValue(EventModel.Key.NAME);
        String nameString = null;
        if(name != null){
            nameString = name.toString();
        }
        nameField.setText(nameString);
        Object details = model.getValue(EventModel.Key.DETAILS);
        String detailsString = null;
        if(details != null){
            detailsString = details.toString();
        }
        detailsField.setText(detailsString);
        Date date = (Date) model.getValue(EventModel.Key.DATE);
        dateField.setDate(date);
    }
    public final void clear(){
        reset();
    }

    private void prepareCategoryField(ResourceBundle I18N) {
        localizeCB = new HashMap<>();
        String expenses = I18N.getString("AddingPanel.expenses");
        String inflow = I18N.getString("AddingPanel.inflow");
        String deposit = I18N.getString("AddingPanel.deposit");
        localizeCB.put(expenses, Event.EXPENSES);
        localizeCB.put(inflow, Event.INFLOW);
        localizeCB.put(deposit, Event.DEPOSIT);
        categoryField.setModel(new DefaultComboBoxModel<>(new String[]{expenses, inflow, deposit}));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        categoryLabel = new javax.swing.JLabel();
        categoryField = new javax.swing.JComboBox<>();
        ammountLabel = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        detailsLabel = new javax.swing.JLabel();
        detailsField = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        dateField = new byt.money.moneymanager.gui.component.CalendarPanel();
        messageLabel = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        categoryLabel.setText("Category:");
        categoryLabel.setMaximumSize(new java.awt.Dimension(120, 30));
        categoryLabel.setMinimumSize(new java.awt.Dimension(120, 30));
        categoryLabel.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(categoryLabel, gridBagConstraints);

        categoryField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoryField.setMinimumSize(new java.awt.Dimension(202, 30));
        categoryField.setPreferredSize(new java.awt.Dimension(202, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(categoryField, gridBagConstraints);

        ammountLabel.setText("Amount:");
        ammountLabel.setMaximumSize(new java.awt.Dimension(120, 30));
        ammountLabel.setMinimumSize(new java.awt.Dimension(120, 30));
        ammountLabel.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(ammountLabel, gridBagConstraints);

        amountField.setMinimumSize(new java.awt.Dimension(202, 30));
        amountField.setPreferredSize(new java.awt.Dimension(202, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(amountField, gridBagConstraints);

        nameLabel.setText("Name:");
        nameLabel.setMaximumSize(new java.awt.Dimension(120, 30));
        nameLabel.setMinimumSize(new java.awt.Dimension(120, 30));
        nameLabel.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(nameLabel, gridBagConstraints);

        nameField.setMinimumSize(new java.awt.Dimension(202, 30));
        nameField.setPreferredSize(new java.awt.Dimension(202, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(nameField, gridBagConstraints);

        detailsLabel.setText("Details:");
        detailsLabel.setMaximumSize(new java.awt.Dimension(120, 30));
        detailsLabel.setMinimumSize(new java.awt.Dimension(120, 30));
        detailsLabel.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(detailsLabel, gridBagConstraints);

        detailsField.setMinimumSize(new java.awt.Dimension(202, 30));
        detailsField.setPreferredSize(new java.awt.Dimension(202, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(detailsField, gridBagConstraints);

        dateLabel.setText("Date:");
        dateLabel.setMaximumSize(new java.awt.Dimension(120, 30));
        dateLabel.setMinimumSize(new java.awt.Dimension(120, 30));
        dateLabel.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(dateLabel, gridBagConstraints);

        dateField.setMinimumSize(new java.awt.Dimension(202, 40));
        dateField.setPreferredSize(new java.awt.Dimension(202, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(dateField, gridBagConstraints);

        messageLabel.setMaximumSize(new java.awt.Dimension(120, 24));
        messageLabel.setMinimumSize(new java.awt.Dimension(120, 24));
        messageLabel.setPreferredSize(new java.awt.Dimension(120, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(messageLabel, gridBagConstraints);

        acceptButton.setText("Accept");
        acceptButton.setMaximumSize(new java.awt.Dimension(100, 30));
        acceptButton.setMinimumSize(new java.awt.Dimension(100, 30));
        acceptButton.setPreferredSize(new java.awt.Dimension(100, 30));
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(acceptButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        String categoryLocalized = categoryField.getSelectedItem().toString();
        Event event = localizeCB.get(categoryLocalized);
        String amount = amountField.getText();
        String name = nameField.getText();
        String details = detailsField.getText();
        Date date = dateField.getDate();
        addingWorkingPresenter.save(event, amount, name, details, date);
        reset();
    }//GEN-LAST:event_acceptButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel ammountLabel;
    private javax.swing.JTextField amountField;
    private javax.swing.JComboBox<String> categoryField;
    private javax.swing.JLabel categoryLabel;
    private byt.money.moneymanager.gui.component.CalendarPanel dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField detailsField;
    private javax.swing.JLabel detailsLabel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables

    public final void reset() {
        categoryField.setSelectedItem(EMPTY);
        amountField.setText(EMPTY);
        nameField.setText(EMPTY);
        detailsField.setText(EMPTY);
        dateField.setDate(new Date());
    }

    private void createValidators() {
        Validator amountValidator = new AmountValidator();
        Validator nameValidator = new TextValidator();
        ComponentValidator componentValidator = new ComponentValidator(acceptButton, amountValidator, nameValidator);
        DocumentListener amountFieldListener = new UserInputHandler(amountValidator, amountField, componentValidator);
        DocumentListener nameFieldListener = new UserInputHandler(nameValidator, nameField, componentValidator);
        amountField.getDocument().addDocumentListener(amountFieldListener);
        nameField.getDocument().addDocumentListener(nameFieldListener);
        getUpValidators(amountFieldListener, nameFieldListener);
    }

    private void getUpValidators(DocumentListener amountFieldListener, DocumentListener nameFieldListener) {
        amountFieldListener.insertUpdate(null);
        nameFieldListener.insertUpdate(null);
    }

    public void setAddingWorkingPresenter(AddingPanelPresenter addingWorkingPresenter) {
        this.addingWorkingPresenter = addingWorkingPresenter;
    }

}
